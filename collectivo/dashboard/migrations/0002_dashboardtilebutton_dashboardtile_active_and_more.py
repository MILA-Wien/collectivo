# Generated by Django 4.1.7 on 2023-04-11 16:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('extensions', '0001_initial'),
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardTileButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('link_type', models.CharField(choices=[('internal', 'Internal link'), ('external', 'External link')], max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='dashboardtile',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='dashboardtile',
            name='content',
            field=models.TextField(blank=True, help_text='HTML content to display inside the tile.'),
        ),
        migrations.AddField(
            model_name='dashboardtile',
            name='source',
            field=models.CharField(choices=[('db', 'Content is defined in the content field of this model.'), ('component', 'Content is defined in a webcomponent.')], default='component', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='dashboardtile',
            name='component',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='dashboardtile',
            name='extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='extensions.extension'),
        ),
        migrations.AlterField(
            model_name='dashboardtile',
            name='label',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='dashboardtile',
            name='requires_group',
            field=models.ForeignKey(blank=True, help_text='If set, the object will only be displayed to users with this group.', null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group'),
        ),
        migrations.CreateModel(
            name='HistoricalDashboardTileButton',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('link_type', models.CharField(choices=[('internal', 'Internal link'), ('external', 'External link')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical dashboard tile button',
                'verbose_name_plural': 'historical dashboard tile buttons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDashboardTile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=True)),
                ('order', models.FloatField(default=1)),
                ('source', models.CharField(choices=[('db', 'Content is defined in the content field of this model.'), ('component', 'Content is defined in a webcomponent.')], max_length=255)),
                ('component', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True, help_text='HTML content to display inside the tile.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('extension', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='extensions.extension')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requires_group', models.ForeignKey(blank=True, db_constraint=False, help_text='If set, the object will only be displayed to users with this group.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='auth.group')),
            ],
            options={
                'verbose_name': 'historical dashboard tile',
                'verbose_name_plural': 'historical dashboard tiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='dashboardtile',
            name='buttons',
            field=models.ManyToManyField(blank=True, help_text='Buttons to display inside the tile.', to='dashboard.dashboardtilebutton'),
        ),
    ]
