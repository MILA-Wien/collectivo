# Generated by Django 4.1.7 on 2023-04-20 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shifts', '0003_alter_historicalshift_shift_type_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShiftSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_weeks', models.PositiveSmallIntegerField(default=4)),
                ('shift_per_month', models.PositiveSmallIntegerField(default=1)),
                ('shift_hours', models.PositiveSmallIntegerField(default=3)),
                ('shift_points_per_shift', models.PositiveSmallIntegerField(default=1)),
                ('shift_points_period_in_days', models.PositiveSmallIntegerField(default=30)),
                ('shift_points_per_period', models.PositiveSmallIntegerField(default=1)),
                ('shift_points_subsbtraction_day', models.PositiveSmallIntegerField(default=1)),
                ('disable_shift_points', models.BooleanField(default=True)),
                ('disable_attendance', models.BooleanField(default=True)),
                ('disable_shift_replacement', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='historicalshiftassignment',
            name='open_for_replacement',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='historicalshiftassignment',
            name='replacement_user',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shifts.shiftprofile'),
        ),
        migrations.AddField(
            model_name='shiftassignment',
            name='open_for_replacement',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='shiftassignment',
            name='replacement_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shift_replacement', to='shifts.shiftprofile'),
        ),
        migrations.AlterField(
            model_name='historicalshift',
            name='shift_type',
            field=models.CharField(choices=[('regular', 'regular'), ('repeating_weekly', 'repeating_weekly'), ('repeating_monthly', 'repeating_monthly'), ('extra', 'extra'), ('holiday', 'holiday'), ('other', 'other')], default='fixed', help_text='Type of shift. Regular shifts are one time shifts.Repeating shifts can be weekly or monthly.Extra shifts are shifts that are not part of theregular schedule. Holiday shifts are shiftsthat are not part of the regular schedule but are notextra shifts. Other shifts are shifts that are notpart of the regular schedule and are not extra shiftsand are not holiday shifts.', max_length=30),
        ),
        migrations.AlterField(
            model_name='historicalshiftassignment',
            name='additional_info_individual',
            field=models.TextField(blank=True, default=None, max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='shift',
            name='shift_type',
            field=models.CharField(choices=[('regular', 'regular'), ('repeating_weekly', 'repeating_weekly'), ('repeating_monthly', 'repeating_monthly'), ('extra', 'extra'), ('holiday', 'holiday'), ('other', 'other')], default='fixed', help_text='Type of shift. Regular shifts are one time shifts.Repeating shifts can be weekly or monthly.Extra shifts are shifts that are not part of theregular schedule. Holiday shifts are shiftsthat are not part of the regular schedule but are notextra shifts. Other shifts are shifts that are notpart of the regular schedule and are not extra shiftsand are not holiday shifts.', max_length=30),
        ),
        migrations.AlterField(
            model_name='shiftassignment',
            name='additional_info_individual',
            field=models.TextField(blank=True, default=None, max_length=300, null=True),
        ),
        migrations.CreateModel(
            name='HistoricalShiftSettings',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('shift_weeks', models.PositiveSmallIntegerField(default=4)),
                ('shift_per_month', models.PositiveSmallIntegerField(default=1)),
                ('shift_hours', models.PositiveSmallIntegerField(default=3)),
                ('shift_points_per_shift', models.PositiveSmallIntegerField(default=1)),
                ('shift_points_period_in_days', models.PositiveSmallIntegerField(default=30)),
                ('shift_points_per_period', models.PositiveSmallIntegerField(default=1)),
                ('shift_points_subsbtraction_day', models.PositiveSmallIntegerField(default=1)),
                ('disable_shift_points', models.BooleanField(default=True)),
                ('disable_attendance', models.BooleanField(default=True)),
                ('disable_shift_replacement', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical shift settings',
                'verbose_name_plural': 'historical shift settingss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
