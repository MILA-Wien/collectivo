version: "3.9"

services:
  # A django app that runs collectivo.
  collectivo:
    container_name: collectivo-app
    restart: "no"
    build:
      context: .
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: http://${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: http://${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8000:8000"

  # A celery worker that runs in the background.
  celery:
    container_name: celery
    build:
      context: .
    command: celery -A collectivo_app worker -l info
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: http://${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: http://${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  # Another celery worker for chron jobs.
  celery-beat:
    container_name: celery-beat
    build:
      context: .
    command: celery -A collectivo_app beat -l info
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: http://${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: http://${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  # A communication broker for celery.
  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    command: >
      --requirepass "${REDIS_PASSWORD}" --appendonly yes --maxmemory 1000mb
      --maxmemory-policy volatile-lru

  # A static files server for django.
  collectivo-static:
    container_name: collectivo-static
    image: nginx:alpine
    ports:
      - "8002:80"
    volumes:
      - ./docker/static:/app/static
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./docker/nginx/error.html:/usr/share/nginx/html/index.html
    restart: always

  # A PostgreSQL database.
  collectivo-db:
    container_name: collectivo-db
    image: postgres:14-alpine
    volumes:
      - collectivo-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: collectivo_db
      POSTGRES_USER: ${COLLECTIVO_DB_USER}
      POSTGRES_PASSWORD: ${COLLECTIVO_DB_PASSWORD}

  # A frontend web application.
  collectivo-ux:
    container_name: collectivo-ux
    image: milawien/collectivo-ux:latest
    restart: always
    environment:
      VITE_APP_API: http://collectivo.local:8000
      VITE_KEYCLOAK_URL: ${KEYCLOAK_SERVER_URL}
    ports:
      - "8001:80"

  # Keycloak for authentication.
  keycloak:
    build: ./docker/keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_SERVER_URL}
      ROOT_LOGLEVEL: ALL
      KEYCLOAK_LOGLEVEL: DEBUG
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/realms/master"]
      interval: 5s
      timeout: 2s
      retries: 15
    volumes:
      - ./docker/keycloak/import:/opt/keycloak/data/import:ro
      - ./docker/keycloak/export:/tmp/export
      - ./docker/keycloak/healthcheck.sh:/healthcheck.sh
    command: start-dev --import-realm
    ports:
      - "8080:8080"

volumes:
  collectivo-db-data:
