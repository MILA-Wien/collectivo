version: "3.9"

services:
  # A django app that runs collectivo.
  collectivo:
    container_name: collectivo-app
    restart: "no"
    build:
      context: .
    ports:
      - "8000:8000"
    # Synchronize source code inside and outside the docker container,
    # and place the collectivo package inside the collectivo app.
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    # Wait for database to be ready (this command only works on linux),
    # migrate the database changes and start a development server.
    command: >
      sh -c "while ! nc -z collectivo-db 5432; do sleep 1; done &&
             while ! nc -z keycloak 8080; do sleep 1; done &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      KEYCLOAK_CLIENT_ID: collectivo
      KEYCLOAK_REALM_NAME: collectivo
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_SECRET_KEY: ${KEYCLOAK_CLIENT_SECRET_KEY}
      COLLECTIVO_EXTENSIONS: members
      DEBUG: 1
      DEVELOPMENT: 1
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      - collectivo-db
      - keycloak

  # A celery worker that runs in the background.
  celery:
    container_name: celery
    build:
      context: .
    command: celery -A collectivo_app worker -l info
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      KEYCLOAK_CLIENT_ID: collectivo
      KEYCLOAK_REALM_NAME: collectivo
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_SECRET_KEY: ${KEYCLOAK_CLIENT_SECRET_KEY}
      COLLECTIVO_EXTENSIONS: members
      DEBUG: 1
      DEVELOPMENT: 1
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      - collectivo
      - redis

  # Another celery worker for chron jobs.
  celery-beat:
    container_name: celery-beat
    build:
      context: .
    command: celery -A collectivo_app beat -l info
    volumes:
      - ./collectivo_app:/collectivo_app
      - ./collectivo:/collectivo_app/collectivo
      - ./docker/static:/collectivo_app/static
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      KEYCLOAK_CLIENT_ID: collectivo
      KEYCLOAK_REALM_NAME: collectivo
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_CLIENT_SECRET_KEY: ${KEYCLOAK_CLIENT_SECRET_KEY}
      COLLECTIVO_EXTENSIONS: members
      DEBUG: 1
      DEVELOPMENT: 1
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      CELERY_BROKER: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      CELERY_BACKEND: "redis://:${REDIS_PASSWORD}@redis:6379/0"
    depends_on:
      - collectivo
      - redis

  # A communication broker for celery.
  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: >
      --requirepass "${REDIS_PASSWORD}" --appendonly yes --maxmemory 1000mb --maxmemory-policy volatile-lru

  # A static files server for django.
  collectivo-static:
    container_name: collectivo-static
    image: nginx:alpine
    ports:
      - "8002:80"
    volumes:
      - ./docker/static:/app/static
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./docker/nginx/error.html:/usr/share/nginx/html/index.html
    restart: always

  # A PostgreSQL database.
  collectivo-db:
    container_name: collectivo-db
    image: postgres:14-alpine
    volumes:
      - collectivo-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: collectivo_db
      POSTGRES_USER: ${COLLECTIVO_DB_USER}
      POSTGRES_PASSWORD: ${COLLECTIVO_DB_PASSWORD}

  # A frontend web application.
  collectivo-ux:
    container_name: collectivo-ux
    image: milawien/collectivo-ux:latest
    restart: always
    environment:
      VITE_APP_API: http://collectivo.local:8000
      VITE_KEYCLOAK_URL: http://keycloak:8080
    ports:
      - "8001:80"

  # Keycloak for authentication.
  keycloak:
    build: ./docker/keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: http://keycloak:8080
      ROOT_LOGLEVEL: ALL
      KEYCLOAK_LOGLEVEL: DEBUG
    volumes:
      - ./docker/keycloak/import:/opt/keycloak/data/import:ro
      - ./docker/keycloak/export:/tmp/export
    command: start-dev --import-realm
    ports:
      - "8080:8080"

volumes:
  collectivo-db-data:
